import tkinter as tk 

from tkinter import messagebox 

import sounddevice as sd 

import numpy as np 

import matplotlib.pyplot as plt 

from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg 

  

class AudioRecorder: 

    def __init__(self, master): 

        self.master = master 

        self.master.title("Audio Recorder") 

         

        # Set window size to 1/2 of the screen 

        screen_width = self.master.winfo_screenwidth() 

        screen_height = self.master.winfo_screenheight() 

        self.master.geometry(f"{screen_width // 2}x{screen_height // 2}") 

  

        title_label = tk.Label(master, text="Sistem Monitoring Untuk Analisis Suara Kebisingan Acara di Kawasan Perumahan\nGuna Memberikan Standar Batas Aman Penggunaan Audio",  

                                font=("Helvetica", 14), wraplength=screen_width // 2 - 20, justify="center") 

        title_label.pack(pady=10) 

  

        # Create a frame for buttons 

        button_frame = tk.Frame(master) 

        button_frame.pack(pady=10) 

  

        # Create buttons in the same row 

        self.record_button = tk.Button(button_frame, text="Record Sound", command=self.start_recording, font=("Helvetica", 12)) 

        self.record_button.pack(side=tk.LEFT, padx=5) 

  

        self.stop_button = tk.Button(button_frame, text="Stop Recording", command=self.stop_recording, font=("Helvetica", 12)) 

        self.stop_button.pack(side=tk.LEFT, padx=5) 

  

        self.play_button = tk.Button(button_frame, text="Play Record", command=self.play_audio, font=("Helvetica", 12)) 

        self.play_button.pack(side=tk.LEFT, padx=5) 

  

        # Create a figure for plotting 

        self.fig, self.axs = plt.subplots(2, 1, figsize=(8, 8))  # Create 2 subplots 

        self.line, = self.axs[0].plot([], []) 

        self.axs[0].set_xlim(0, 44100)  # Set x-axis limit for audio signal 

        self.axs[0].set_ylim(-1, 1)  # Set y-axis limit for audio signal 

        self.axs[0].set_title("Audio Signal") 

        self.axs[0].set_xlabel("Samples") 

        self.axs[0].set_ylabel("Amplitude") 

  

        # Create a canvas to embed the plot in the Tkinter window 

        self.canvas = FigureCanvasTkAgg(self.fig, master=self.master) 

        self.canvas.get_tk_widget().pack() 

  

        self.audio_data = []  # Initialize as an empty list 

        self.sample_rate = 44100  # Sample rate in Hz 

        self.is_recording = False 

   

if __name__ == "__main__": 

    root = tk.Tk() 

    app = AudioRecorder(root) 

    root.mainloop() 
